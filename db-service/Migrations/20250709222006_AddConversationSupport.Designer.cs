// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using db_service.Data;

#nullable disable

namespace db_service.Migrations
{
    [DbContext(typeof(ArticleContext))]
    [Migration("20250709222006_AddConversationSupport")]
    partial class AddConversationSupport
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("db_service.Models.ArticleResult", b =>
                {
                    b.Property<Guid>("Uuid")
                        .HasColumnType("uuid");

                    b.Property<string>("Sentiment")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Summary")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Uuid");

                    b.ToTable("ArticleResults");
                });

            modelBuilder.Entity("db_service.Models.ConversationEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<Guid>("ArticleResultId")
                        .HasColumnType("uuid");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ArticleResultId");

                    b.ToTable("ConversationEntries");
                });

            modelBuilder.Entity("db_service.Models.ConversationEntry", b =>
                {
                    b.HasOne("db_service.Models.ArticleResult", "ArticleResult")
                        .WithMany("Conversation")
                        .HasForeignKey("ArticleResultId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ArticleResult");
                });

            modelBuilder.Entity("db_service.Models.ArticleResult", b =>
                {
                    b.Navigation("Conversation");
                });
#pragma warning restore 612, 618
        }
    }
}
